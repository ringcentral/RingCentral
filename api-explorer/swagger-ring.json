{
    "swagger": "2.0",
    "info": {
        "description": "<p>This is a beta interactive API explorer for the RingCentral Connect Platform. To use this service, you will need to have an account with the proper credentials to generate an OAuth2 access token.</p><p><b>Quick Start</b></p><ol><li>1) Go to <b>Authentication &gt; /oauth/token</b></li><li>2) Enter <b>app_key, app_secret, username, password</b> fields and then click \"Try it out!\"</li><li>3) Upon success, your access_token is loaded and you can access any form requiring authorization.</li></ol><b>Links</b><ul><li><a href=\"https://developer.ringcentral.com/\">RingCentral Developer Program and API Docs</a></li><li><a href=\"https://github.com/ringcentral\">RingCentral SDKs on Github</a></li><li><a href=\"mailto:devsupport@ringcentral.com\">RingCentral Developer Support Email</a></li></ul>",
        "version": "1.0",
        "title": "RingCentral Connect Platform API Explorer",
        "termsOfService": "https://developer.ringcentral.com"
    },
    "host": "platform.devtest.ringcentral.com",
    "basePath": "/restapi",
    "tags": [
        {
            "name": "OAuth2",
            "description": ""
        },
        {
            "name": "Authentication",
            "description": ""
        },
        {
            "name": "Account and Extension Information",
            "description": ""
        },
        {
            "name": "API Versioning",
            "description": ""
        },
        {
            "name": "Call Log",
            "description": ""
        },
        {
            "name": "Messaging",
            "description": "SMS, Fax and Partner Messaging",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://developer.ringcentral.com/api-docs/index.html##RefMessaging.html"
            }
        },
        {
            "name": "RingOut",
            "description": "Making calls"
        },
        {
            "name": "Presence",
            "description": ""
        },
        {
            "name": "Address Book",
            "description": ""
        },
        {
            "name": "Notifications",
            "description": "Subscription API"
        },
        {
            "name": "Dictionary",
            "description": ""
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/oauth/token": {
            "post": {
                "tags": [ "Authentication" ],
                "summary": "Get Token",
                "description": "<p>This endpoint supports two flows:</p><p><b>1) Resource Owner Password Credentials Flow:</b> Issues new access and refresh tokens. Requests to this endpoint must be authenticated with HTTP Basic scheme. The following paramters are required for this flow:</p><ul style=\"margin:0 0 1em 2em\"><li><b>1) api_key</b></li><li><b>2) api_secret</b></li><li><b>3) username</b></li><li><b>4) password</b></li></ul><p>This flow can use all the parameters below except for the <b>refresh_token</b> parameter which is used for the Refresh Token Flow decribed below. Since 1.0.4 (Release 5.13)</p><p><b>2) Refresh Token Flow:</b> Issues new access and refresh tokens by previously issued refresh token. Requests to this endpoint must be authenticated with HTTP Basic scheme. The following parameters are required for this flow:</p><ul style=\"margin:0 0 1em 2em\"><li><b>1) api_key</b></li><li><b>2) api_secret</b></li><li><b>3) refresh_token</b></li></ul><p>The only formData paramter used for this flow is the <b>refresh_token</b> parameter. Since 1.0.4 (Release 5.13)</p>",
                "consumes": [ "application/x-www-form-urlencoded" ],
                "produces": [ "application/json", "application/xml" ],
                "parameters": [
                    {
                        "name": "app_key",
                        "default": "",
                        "type": "string",
                        "description": "<b>Convenience to pre-populate the Authorization header only</b>",
                        "required": false
                    },
                    {
                        "name": "app_secret",
                        "default": "",
                        "type": "string",
                        "description": "<b>Convenience to pre-populate the Authorization header only</b>",
                        "required": false
                    },
                    {
                        "name": "username",
                        "type": "string",
                        "in": "formData",
                        "default": "",
                        "description": "<b>Phone number linked to account or extension in account in E.164 format with or without leading \"+\" sign</b>",
                        "required": false,
                        "allowMultiple": false
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "in": "formData",
                        "default": "",
                        "description": "<b>User's password</b>",
                        "required": false,
                        "allowMultiple": false
                    },
                    {
                        "name": "extension",
                        "type": "string",
                        "in": "formData",
                        "description": "Optional. Extension short number. If company number is specified as a username, and \"extension\" is not specified, the server will attempt to authenticate client as main company administrator",
                        "required": false,
                        "allowMultiple": false
                    },
                    {
                        "name": "grant_type",
                        "default": "password",
                        "type": "string",
                        "in": "formData",
                        "description": "<b>Must hold \"password\" value for Resource Owner Credentials flow</b>",
                        "required": false,
                        "allowMultiple": false
                    },
                    {
                        "name": "access_token_ttl",
                        "in": "formData",
                        "description": "Optional. Access token lifetime in seconds; the possible values are from 600 sec (10 min) to 3600 sec (1 hour). The default value is 3600 sec. If the value specified exceeds the default one, the default value is set. If the value specified is less than 600 seconds, the minimum value (600 sec) is set",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "refresh_token_ttl",
                        "in": "formData",
                        "description": "Optional. Refresh token lifetime in seconds; default is 604800 sec (1 week). If the value specified exceeds the default one, the default value is set",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "scope",
                        "type": "string",
                        "default": "",
                        "description": "List of API permissions to be used with access token. Can be omitted when requesting all permissions defined during the application registration phase",
                        "in": "formData"
                    },
                    {
                        "name": "refresh_token",
                        "type": "string",
                        "default": "",
                        "description": "Previously issued refresh token. This is the only formData field used for the Refresh Token Flow. It is not used for the Resource Owner Password Credentials Flow",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "<ul><li>1) invalid_request: Unsupported grant type</li><li>2) invalid_client: Bad Application Release Status: Blocked</li></ul>"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    },
                    "429": {
                        "description": "Request rate exceeded"
                    }
                }
            }
        },
        "/oauth/revoke": {
            "post": {
                "tags": [ "Authentication" ],
                "summary": "Revoke Token",
                "description": "Revokes access/refresh token. Requests to this endpoint <b>must</b> be authenticated with HTTP Basic scheme using the application key and application secret as login and password, correspondingly. Since 1.0.5 (Release 5.14)",
                "consumes": [ "application/x-www-form-urlencoded" ],
                "parameters": [
                    {
                        "name": "app_key",
                        "default": "",
                        "type": "string",
                        "description": "Used to populate the Authorization header",
                        "required": true
                    },
                    {
                        "name": "app_secret",
                        "default": "",
                        "type": "string",
                        "description": "Used to populate the Authorization header",
                        "required": true
                    },
                    {
                        "name": "token",
                        "type": "string",
                        "in": "formData",
                        "description": "Active access or refresh token to be revoked",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "API Versioning"
                ],
                "summary": "Get API Versions",
                "description": "Returns current API version(s) and server info.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RestapiResponse"
                        }
                    }
                }
            }
        },
        "/v1.0/account/{accountId}": {
            "get": {
                "tags": [
                    "Account and Extension Information"
                ],
                "summary": "Get Account Info",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AccountInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: TokenInvalid"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}": {
            "get": {
                "tags": [
                    "Account and Extension Information"
                ],
                "summary": "Get Extension Info",
                "description": "Returns the information on account extension.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ExtensionInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: TokenInvalid"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/extension": {
            "get": {
                "tags": [
                    "Account and Extension Information"
                ],
                "summary": "Get Extension List",
                "description": "Returns the list of extensions created for a particular account. All types of extensions are included in this list.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized: TokenInvalid"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/call-log/{callRecordIds}": {
            "get": {
                "tags": [ "Call Log" ],
                "summary": "Get Call Log Record",
                "description": "Returns individual call log record by callRecordId(s).",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "callRecordIds",
                        "in": "path",
                        "description": "Internal identifier of a call log record. Batch mode is supported via comma-delimited list",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordIds}": {
            "get": {
                "tags": [ "Call Log" ],
                "summary": "Get Call Log Record",
                "description": "Returns individual call log record by callRecordId(s).",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral extension (integer) or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "callRecordIds",
                        "in": "path",
                        "description": "Internal identifier of a call log record. Batch mode is supported via comma-delimited list",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/call-log": {
            "get": {
                "tags": [
                    "Call Log"
                ],
                "summary": "Get Call Log Records by Filter",
                "description": "Every inbound and outbound call connected through the RingCentral service is logged in the database. Every extension on RingCentral account has an assigned Call Log that stores all inbound and outbound calls for the extension. Users are able to access all of their calls to get reliable information on callers' names, phone numbers, etc.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionNumber",
                        "in": "query",
                        "description": "Extension number of a user. If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phoneNumber",
                        "in": "query",
                        "description": "Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionNumber filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string",
                        "enum": [ "Inbound", "Outbound" ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string",
                        "enum": [ "Voice", "Fax" ]
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "description": "Call log record view. The default value is 'Simple' for both account and extension call log Detailed view is experimental and supplies additional call leg information.",
                        "required": false,
                        "type": "string",
                        "enum": [ "Simple", "Detailed" ]
                    },
                    {
                        "name": "withRecording",
                        "in": "query",
                        "description": "'True' if only recorded calls have to be returned.",
                        "required": false,
                        "type": "string",
                        "enum": [ "True", "False" ]
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Specifies the ending timestamp for result records. Default: current time",
                        "required": false,
                        "type": "dateTime",
                        "format": "date-time"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "The start timestamp for result records. Default value is equal to dateTo minus 1 week",
                        "required": false,
                        "type": "dateTime",
                        "format": "date-time"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Standard paging parameters",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Standard paging parameters",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CallLogRecord"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: TokenInvalid"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/call-log": {
            "get": {
                "tags": [
                    "Call Log"
                ],
                "summary": "Get Call Log Records by Filter",
                "description": "Every inbound and outbound call connected through the RingCentral service is logged in the database. Every extension on RingCentral account has an assigned Call Log that stores all inbound and outbound calls for the extension. Users are able to access all of their calls to get reliable information on callers' names, phone numbers, etc.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "default": "~",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "extensionNumber",
                        "in": "query",
                        "description": "Extension number of a user. If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phoneNumber",
                        "in": "query",
                        "description": "Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionNumber filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "'Inbound' | 'Outbound'  The   direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "'Voice' | 'Fax' Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "description": "Call log record view. The default value is 'Simple' for both account and extension call log Detailed view is experimental and supplies additional call leg information.",
                        "required": false,
                        "type": "string",
                        "enum": [ "Simple", "Detailed" ]
                    },
                    {
                        "name": "withRecording",
                        "in": "query",
                        "description": "'True' if only recorded calls have to be returned.",
                        "required": false,
                        "type": "string",
                        "enum": [ "True", "False" ]
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Specifies the ending timestamp for result records. Default: current time",
                        "required": false,
                        "type": "dateTime",
                        "format": "date-time"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "The start timestamp for result records. Default value is equal to dateTo minus 1 week",
                        "required": false,
                        "type": "dateTime",
                        "format": "date-time"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Standard paging parameters",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Standard paging parameters",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized: TokenInvalid"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/active-calls": {
            "get": {
                "tags": [ "Call Log" ],
                "summary": "Get Active Calls",
                "description": "Returns records of all calls that are in progress, ordered by start time in descending order.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string",
                        "enum": [ "Inbound", "Outbound" ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string",
                        "format": "string",
                        "enum": [ "Voice", "Fax" ]
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Standard paging parameters, see the section called “Common Query Parameters in Collection Resources”",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Standard paging parameters, see the section called “Common Query Parameters in Collection Resources”",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized: TokenInvalid"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/active-calls": {
            "get": {
                "tags": [ "Call Log" ],
                "summary": "Get Active Calls",
                "description": "Returns records of all calls that are in progress, ordered by start time in descending order.",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string",
                        "enum": [ "Inbound", "Outbound" ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted",
                        "required": false,
                        "type": "string",
                        "format": "string",
                        "enum": [ "Voice", "Fax" ]
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Standard paging parameters, see the section called “Common Query Parameters in Collection Resources”",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Standard paging parameters, see the section called “Common Query Parameters in Collection Resources”",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageIds}": {
            "get": {
                "tags": [ "Messaging" ],
                "summary": "Get Single Message",
                "description": "Returns individual message record by the given <b>messageId</b>.",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "messageIds",
                        "in": "path",
                        "description": "Internal identifier of a message. Batch support via comma delimited list",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string"
                    }
                ]
            },
            "delete": {
                "tags": [ "Messaging" ],
                "summary": "Delete Message",
                "description": "Deletes an individual message or several messages by the given message IDs.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "messageIds",
                        "in": "path",
                        "description": "Internal identifier of a message. Batch support via comma delimited list",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string"
                    }
                ]
            },
            "put": {
                "tags": [ "Messaging" ],
                "summary": "Update Message",
                "description": "Updates an individual message or several messages. Currently, updating only the message read status is supported. <br />Note: If the status of the updating message is 'Purged', then 404 Not Found error code is returned. In case of incorrect request 400 Bad Request error code is returned. Since 1.0.2.",
                "consumes": [ "application/json" ],
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "messageIds",
                        "in": "path",
                        "description": "Internal identifier of a message. Batch support via comma delimited list",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Read status of a message to be changed ['Read' | 'Unread']. Multiple values are accepted in a comma-delimited list corresponding to messageIds",
                        "defaultValue": "{\n  \"readStatus\": \"Read\"\n}",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/message-store/{conversationId}": {
            "delete": {
                "tags": [ "Messaging" ],
                "summary": "Delete Messages in a Thread",
                "description": "Deletes the entire message thread by the conversationId assigned to this message thread. It is possible to delete only one thread by one request, batch request is not supported. Since 1.0.2.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session. No batch support.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "conversationId",
                        "in": "path",
                        "description": "Internal identifier of a message.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/message-store": {
            "get": {
                "tags": [ "Messaging" ],
                "summary": "Get Message List",
                "description": "Returns the list of messages from an extension mailbox. Since 1.0.2.",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string",
                        "description": "The phone number. If specified, messages are returned for this particular phone number only",
                        "in": "query"
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "in": "query",
                        "description": "The direction for the resulting messages. If not specified, both inbound and outbound messages are returned. Multiple values are accepted.",
                        "enum": [ "Inbound", "Outbound" ]
                    },
                    {
                        "name": "messageType",
                        "type": "string",
                        "in": "query",
                        "description": "The type of the resulting messages. If not specified, all messages without message type filtering are returned. Multiple values are accepted",
                        "enum": [ "Fax", "SMS", "VoiceMail", "Pager", "Text" ]
                    },
                    {
                        "name": "readStatus",
                        "type": "string",
                        "in": "query",
                        "description": "The read status for the resulting messages. Multiple values are accepted",
                        "enum": [ "Read", "Unread" ]
                    },
                    {
                        "name": "dateTo",
                        "type": "string",
                        "format": "date-time",
                        "in": "query",
                        "description": "Specifies the ending timestamp for the resulting messages. Default: current time"
                    },
                    {
                        "name": "dateFrom",
                        "type": "string",
                        "format": "date-time",
                        "in": "query",
                        "description": "The start timestamp for the resulting messages. Default value is equal to dateFrom minus 1 week"
                    },
                    {
                        "name": "conversationId",
                        "type": "integer",
                        "format": "int64",
                        "in": "query",
                        "description": "Specifies the conversation identifier for the resulting messages"
                    },
                    {
                        "name": "availability",
                        "type": "string",
                        "in": "query",
                        "description": "Specifies the availability status for the resulting messages. Default value is 'Alive'. Multiple values are accepted",
                        "enum": [ "Alive", "Deleted", "Purged" ]
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "format": "int64",
                        "in": "query",
                        "description": "Standard paging parameters, see the section called “Common Query Parameters in Collection Resources”"
                    },
                    {
                        "name": "perPage",
                        "type": "integer",
                        "format": "int64",
                        "in": "query",
                        "description": "Standard paging parameters, see the section called “Common Query Parameters in Collection Resources”"
                    }
                ]

            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageId}/content/{attachmentId}": {
            "get": {
                "tags": [ "Messaging" ],
                "summary": "Get Message Attachment Data",
                "description": "Returns particular message attachment data as a media stream. Since 1.0.4 (Release 5.13)",
                "produces": [
                    "text/plain",
                    "image/tiff"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "Internal identifier of a message",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "Internal identifier of a message attachment",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/fax": {
            "post": {
                "tags": [ "Messaging" ],
                "summary": "Create Fax Message",
                "description": "Creates and sends new fax message. Since 1.0.2",
                "consumes" : [
                    "multipart/mixed; boundary=Boundary_1_14413901_1361871080888"
                ],
                "produces" : [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "default": "multipart/mixed; boundary=Boundary_1_14413901_1361871080888",
                        "type": "string",
                        "description": "This form fills out this required field automatically using the example MIME boundary string."
                    },
                    {
                        "name": "Content-Length",
                        "in": "header",
                        "default": "",
                        "description": "Actual content length. This form fills out this required field automatically.",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "consumes": [ "multipart/mixed; boundary=Boundary_1_14413901_1361871080888" ],
                        "default": "--Boundary_1_14413901_1361871080888\nContent-Type: application/json\n\n{\n  \"to\":[{\"phoneNumber\":\"18005630003\"}],\n  \"faxResolution\":\"High\",\n  \"sendTime\":\"2013-02-26T09:31:20.882Z\"\n}\n\n--Boundary_1_14413901_1361871080888\nContent-Type: text/plain\n\nHello, World!\n\n--Boundary_1_14413901_1361871080888--",
                        "type": "string",
                        "description": "Multi-part MIME consisting of one part JSON body and one part text. For the MIME boundary, in this UI, use \"Boundary_1_14413901_1361871080888\". JSON body values:<br><br><table style=\"border:1px #aaa black\"><tr><td>Property</td><td>Data type</td><td>Description</td></tr><tr><td><b>to</b></td><td>Contact Info object</td><td>Recipient information. <b>phoneNumber</b> property is mandatory</td></tr><tr><td>resolution</td><td><select><option>High</option><option>Low</option></select></td><td>Fax resolution</td></tr><tr><td>sendTime</td><td>datetime</td><td>Optional. Timestamp to send fax at. If not specified (current or the past), the fax is sent immediately</td></tr><tr><td>coverIndex</td><td>Integer (0-13)<br><select><option>0 (none - no cover page)</option><option>1 (\"Ancient\" cover page)</option><option>2 (\"Birthday\" cover page)</option><option>3 (\"Blank\" cover page)</option><option>4 (\"Clasmod\" cover page)</option><option>5 (\"Classic\" cover page)</option><option>6 (\"Confidential\" cover page)</option><option>7 (\"Contempo\" cover page)</option><option>8 (\"Elegant\" cover page)</option><option>9 (\"Express\" cover page)</option><option>10 (\"Formal\" cover page)</option><option>11 (\"Jazzy\" cover page)</option><option>12 (\"Modern\" cover page)</option><option>13 (\"Urgent\" cover page)</option></select></td><td>Optional. Cover page index. If not specified, the default cover page which is configured in \"Outbound Fax Settings\" is attached. See also \"Available Cover Pages\" table below</td></tr><tr><td>coverPageText</td><td>string</td><td>Optional. Cover page text, entered by the fax sender and printed on the cover page. Maximum length is limited to 1024 symbols</td></tr></table>"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/sms": {
            "post": {
                "tags": [
                    "Messaging"
                ],
                "summary": "Create SMS message",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A JSON body where <b>from</b> is a Caller Info object with at least <b>phoneNumber</b> populated and <b>to</b> is an array of Caller Info objects with at least <b>phoneNumber</b> populated. SMS is a text limited to 160 characters.",
                        "defaultValue": "{\n  \"to\": [{\"phoneNumber\": \"18551003738\"}],\n  \"from\": {\"phoneNumber\": \"18559100010\"},\n  \"text\": \"Test SMS message from Platform server\"\n}",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "<ul><li>1) Invalid Parameter: Cannot find the phone number which belongs to user;</li><li>2) MSG-225: InvalidContent - Message length is greater than 160 symbols</li></ul>"
                    },
                    "401": {
                        "description": "<ul><li>1) Unauthorized: TokenInvalid</li><li>2) Unauthorized: TokenExpired</li></ul>"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/company-pager": {
            "post": {
                "tags": [ "Messaging" ],
                "summary": "Create Pager Message",
                "description": "Creates and sends new pager message. Since 1.0.2",
                "consumes": [ "application/json" ],
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account (integer) or tilde (~) to indicate the account which was logged-in within the current session.",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension (integer) or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "consumes": [ "multipart/mixed" ],
                        "default": "{\n  \"to\": [ {\"extensionNumber\": \"102\"},\n            {\"extensionNumber\": \"103\"} ],\n  \"from\": {\"extensionNumber\": \"101\"},\n  \"text\": \"Hello!\"\n}",
                        "type": "string",
                        "description": "Multi-part MIME consiting of one part JSON body and one part text. JSON body values:<br><br><table style=\"border:1px #aaa black\"><tr><td>Property</td><td>Data type</td><td>Description</td></tr><tr><td><b>to</b></td><td>[Contact Info object]</td><td>Receiver of pager message. The <b>extensionNumber</b> property must be filled</td></tr><tr><td><b>from</b></td><td>Contact Info object</td><td>Sender of pager message. The <b>extensionNumber</b> property must be filled</td></tr><tr><td>text</td><td>string</td><td>Text of pager message</td></tr><tr><td>replyOn</td><td>integer</td><td>Optional. ID of a message this message replies to</td></tr></table>"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "<ul><li>1) Bad Request: InvalidContent: The content is invalid. For example, the pager message exceeds the length limit (160 symbols)</li><li>2) Bad Request: InvalidParameter: Bad Request One or many request parameters are invalid, refer to parameterName field in response</li><li>3) Bad Request: RejectedByRecipient: Bad Request This extension/account does not support pager messages, or it is Disabled.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>1) Forbidden: FeatureNotAvailable: This extension/account does not support pager messages</li><li>2) Forbidden: OldThreadReply: Reply is forbidden for old message threads</li><li>3) Forbidden: OutOfThreadReply: Reply is denied for user, who is no longer a thread participant</li></ul>"
                    }
                }
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/ringout": {
            "post": {
                "tags": [
                    "RingOut"
                ],
                "summary": "Make RingOut Call",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A JSON body where <b>from</b> and <b>to</b> are a Caller Info object with <b>phoneNumber</b> populated - phone number of the caller and called party correspondingly (mandatory), <b>callerId</b> is a Caller Info object with <b>phoneNumber</b> populated - the number which will be displayed to the called party (optional) and <b>playPrompt</b> is a boolean value - turn on/off the audio prompt that the calling party hears when the call is connected (optional).",
                        "defaultValue": "{\n  \"to\": {\"phoneNumber\": \"12053320032\"},\n  \"from\": {\"phoneNumber\": \"12052160005\"},\n  \"callerId\": {\"phoneNumber\": \"12053320032\"},\n  \"playPrompt\": true\n}",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/ringout/{ringoutId}": {
            "get": {
                "tags": [
                    "RingOut"
                ],
                "summary": "Get Status of RingOut Call",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "ringoutId",
                        "in": "path",
                        "description": "Internal identifier of a RingOut call",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "RingOut"
                ],
                "summary": "Cancel RingOut Call",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "ringoutId",
                        "in": "path",
                        "description": "Internal identifier of a RingOut call",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/presence": {
            "get": {
                "tags": [
                    "Presence"
                ],
                "summary": "Get Extension Presence Status",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact": {
            "get": {
                "tags": [
                    "Address Book"
                ],
                "summary": "Get Address Book",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Address Book"
                ],
                "summary": "Create Single Contact",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A JSON body with contact informaion where <b>firstName</b>, <b>lastName</b>, <b>middleName</b>, <b>nickName</b> are strings - representing contact name; <b>company</b>, <b>jobTitle</b> are strings - contact job; <b>homePhone</b>, <b>homePhone2</b>, <b>businessPhone</b>, <b>businessPhone2</b>, <b>mobilePhone</b>, <b>businessFax</b>, <b>companyPhone</b>, <b>assistantPhone</b>, <b>carPhone</b>, <b>otherPhone</b>, <b>otherFax</b>, <b>callbackPhone</b> are strings - contact phone numbers; <b>email</b>, <b>email2</b>, <b>email3</b> are strings - contact email addresses; <b>homeAddress</b>, <businessAddress>, <otherAddress> are Contact Address Info objects - contact post addresses; <b>birthday</b> is a string - contact's date of birth; <b>webPage</b> is a string - contact's web page URL; <b>notes</b> is a string - extra notes for contact",
                        "defaultValue": "{\n  \"firstName\": \"Vanessa\", \n  \"lastName\": \"May\", \n  \"businessAddress\": { \n    \"street\": \"2 Marina Blvd\", \n    \"city\": \"San-Francisco\", \n    \"state\": \"CA\", \n    \"zip\": \"94123\" \n } \n}",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}": {
            "get": {
                "tags": [
                    "Address Book"
                ],
                "summary": "Get Contact",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Internal identifier of a contact record in the RingCentral database",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Address Book"
                ],
                "summary": "Modify Contact",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Internal identifier of a contact record in the RingCentral database",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Address Book"
                ],
                "summary": "Delete Contact",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Internal identifier of a RingCentral account or tilde (~) to indicate the account which was logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "extensionId",
                        "in": "path",
                        "description": "Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "~",
                        "required": true,
                        "allowMultiple": false,
                        "dataType": "long",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Internal identifier of a contact record in the RingCentral database",
                        "required": true,
                        "allowMultiple": true,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/subscription": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create Subscription",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A JSON body with subscription informaion where <b>eventFilters</b> is an array of strings - URIs of API resources (mandatory); <b>deliveryMode</b> - notification delivery settings: <b>transportType</b> is a string (should be specified to \"PubNub\") - notification transportaion provider name; <b>encryption</b> is a boolean value - specifies if the message will be encrypted or not",
                        "defaultValue": "{\n  \"eventFilters\": [ \n    \"/restapi/v1.0/account/~/extension/~/presence\", \n    \"/restapi/v1.0/account/~/extension/~/message-store\" \n  ], \n  \"deliveryMode\": { \n    \"transportType\": \"PubNub\", \n    \"encryption\": \"false\" \n  } \n}",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/subscription/{subscriptionId}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get Subscription",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "Internal identifier of a subscription",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Renew Subscription / Modify Event Filters",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "Internal identifier of a subscription",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "defaultValue": "{\n  \"eventFilters\": [ \n    \"/restapi/v1.0/account/~/extension/~/presence\", \n    \"/restapi/v1.0/account/~/extension/~/message-store\" \n  ] \n}",
                        "description": "A JSON body with subscription informaion where <b>eventFilters</b> is an array of strings - URIs of API resources",
                        "required": false,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Cancel Subscription",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "Internal identifier of a subscription",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string",
                        "format": "string"
                    }
                ]
            }
        },
        "/v1.0/dictionary/country/{countryId}": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get Single Country",
                "description": "Returns the information on the required country. Since 1.0.10 (Release 6.2)",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Internal identifier of a country",
                        "notes": "",
                        "paramType": "path",
                        "defaultValue": "1",
                        "required": true,
                        "allowMultiple": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/v1.0/dictionary/country": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get Countries",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "page",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/v1.0/dictionary/state/{stateId}": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get Single State",
                "description": "Returns the information on the required state. Since 1.0.10 (Release 6.2)",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "type": "string",
                        "description": "Internal identifier of a state",
                        "default": 13,
                        "required": true
                    }
                ]
            }
        },
        "/v1.0/dictionary/state": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get States of a Country",
                "description": "Returns all the states for the certain country. Since 1.0.10 (Release 6.2)",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "query",
                        "type": "string",
                        "default": 1,
                        "description": "Internal identifier of a country"
                    },
                    {
                        "name": "withPhoneNumbers",
                        "in": "query",
                        "type": "string",
                        "enum": [ "True", "False" ],
                        "description": "If 'True', the list of states with phone numbers available for buying is returned. The default value is 'False'"
                    },
                    {
                        "name": "page",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/v1.0/dictionary/location": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get All Locations",
                "description": "Returns all the available locations for the certain state. Since 1.0.10 (Release 6.2)",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "query",
                        "type": "string",
                        "description": "Internal identifier of a state",
                        "default": 13
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "type": "string",
                        "enum": [ "Npa", "City" ],
                        "default": "City",
                        "description": "Sorts results by the specified property. The default value is 'City'"
                    },
                    {
                        "name": "page",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "InvalidParameter"
                    }
                }
            }
        },
        "/v1.0/dictionary/timezone/{timezoneId}": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get Single Timezone",
                "description": "Returns the information on the certain timezone. Since 1.0.10 (Release 6.2)",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "timezoneId",
                        "in": "path",
                        "type": "string",
                        "default": "1",
                        "description": "Internal identifier of a timezone",
                        "required": true
                    },
                    {
                        "name": "page",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/v1.0/dictionary/timezone": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get All Timezones",
                "description": "Returns all available timezones.<br><br>This API provides access to all the available time zones and their respective IDs. They may be used to configure the default time zone and time zones for specific extensions. The API supports only one operation - retrieving available time zones.",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "page",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "perPage",
                        "description": "Standard paging parameters",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/v1.0/dictionary/language": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get Language List",
                "description": "Returns the information about supported languages. Since 1.0.14 (Release 6.6)",
                "produces": [ "application/json" ]
            }
        },
        "/v1.0/dictionary/language/{languageId}": {
            "get": {
                "tags": [ "Dictionary" ],
                "summary": "Get Single Language",
                "description": "Returns language by its respective ID. Since 1.0.14 (Release 6.6)",
                "produces": [ "application/json" ],
                "parameters": [
                    {
                        "name": "languageId",
                        "description": "Internal identifier of a language; see the section called “Resource Identification Properties”",
                        "in": "path",
                        "default": 1033,
                        "type": "string",
                        "required": true
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
            "flow": "bearer",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets",
                "read:accounts": "read your accounts"
            }
        },
        "ringcentral_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://platform.devtest.ringcentral.com/restapi/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets",
                "read:accounts": "read your accounts"
            },
            "tokenUrl": "https://platform.devtest.ringcentral.com/restapi/oauth/token"
        }
    },
    "definitions": {
        "RestapiResponse": {
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "Standard resource property canonical URI"
                },
                "apiVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VersionInfo"
                    }
                },
                "serverVersion": {
                    "type": "string",
                    "description": "Server Version"
                },
                "serverRevision": {
                    "type": "string",
                    "description": "Server Revision"
                }
            }
        },
        "VersionInfo": {
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "Standard resource property canonical URI"
                },
                "versionString": {
                    "type": "string",
                    "description": "Version of the RingCentral REST API"
                },
                "releaseDate": {
                    "type": "string",
                    "description": "Release date of this version"
                },
                "uriString": {
                    "type": "string",
                    "description": "URI part determining the current version"
                }
            }
        },
        "AccountInfo": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Internal unique identifier of a resource. This property exists in all resources which support retrieval/update/delete of a single record of particular type. Depending on a resource it can hold either an integer or a string value. The resource <b>id</b> is also passed as a path parameter in the URI"
                },
                "uri": {
                    "type": "string",
                    "description": "Canonical URI of a resource. This URI might not be the same as the one which was used to retrieve this resource information. For example, if a resource was accessed by the URI containing simplified syntax with the tilde (~) characters, the canonical URI will also contain real identifiers. In most cases the URI contains an <b>id</b> value embedded as a path parameter"
                },
                "serviceInfo": {
                    "$ref": "#/definitions/ServiceInfo",
                    "description": "Account service information, including brand, service plan and billing plan"
                },
                "mainNumber": {
                    "type": "string",
                    "description": "Main phone number of the current account"
                },
                "operator": {
                    "$ref": "#/definitions/ExtensionInfoShort"
                },
                "status": {
                    "type": "string",
                    "description": "Account status",
                    "enum": [ "Confirmed", "Disabled" ]
                },
                "setupWizardState": {
                    "type": "string",
                    "description": "Specifies account configuration wizard state (web service setup). The default value is 'NotStarted'",
                    "enum": [ "NotStarted", "Incomplete", "Completed" ]
                },
                "statusInfo": {
                    "type": "string",
                    "description": "Collection of parameters. Status information (reason, comment, lifetime). Returned for 'Disabled' status only"
                },
                "reason": {
                    "type": "string",
                    "description": "Type of suspension",
                    "enum": [ "SuspendedVoluntarily", "SuspendedInvoluntarily", "CancelledVoluntarily", "CancelledInvoluntarily" ]
                },
                "comment": {
                    "type": "string",
                    "description": "A free-form user comment, describing the status change reason"
                },
                "till": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date until which the account will get deleted. The default value is 30 days since current time"
                },
                "partnerId": {
                    "type": "string",
                    "description": "Additional account identifier, developed and applied by the client"
                }
            }
        },
        "ExtensionInfo": {
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "Standard resource property canonical URI"
                },
                "id": {
                    "type": "string",
                    "description": "Standard resource property ID"
                },
                "partnerId": {
                    "type": "string",
                    "description": "<em>For Partner Applications</em> Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding accountId/extensionId for each partnerId of a client application. In request URIs partnerIds are accepted instead of regular RingCentral native IDs as path parameters using <b>pid = XXX</b> clause. Though in response URIs contain the corresponding accountIds and extensionIds. In all request and response bodies these values are reflected via \"partnerId\" attributes of account and extension"
                },
                "extensionNumber": {
                    "type": "string",
                    "description": "Extension short number (usually 3 or 4 digits)"
                },
                "name": {
                    "type": "string",
                    "description": "Extension user name"
                },
                "type": {
                    "type": "string",
                    "description": "Extension type",
                    "enum": [ "User", "Fax User", "VirtualUser", "DigitalUser", "Department", "Announcement", "Voicemail", "SharedLinesGroup", "PagingOnly", "IvrMenu", "ApplicationExtension" ]
                },
                "departments": {
                    "type": "string",
                    "description": "Information on department extension(s), to which the requested extension belongs. Returned only for user extensions, members of department, requested by single <b>extensionId</b> [JCW type Collection of Parameters]"
                },
                "extensionNumber": {
                    "type": "string",
                    "description": "Number of department extension"
                },
                "contact": {
                    "$ref": "#/definitions/ContactInfo"
                },
                "status": {
                    "type": "string",
                    "description": "Extension current state",
                    "enum": [ "Enabled", "Disabled", "NotActivated" ]
                },
                "statusInfo": {
                    "type": "string",
                    "description": "Collection of parameters  Status information (reason, comment). Returned for 'Disabled' status only [JCW Collection of Parameters]"
                },
                "reason": {
                    "type": "string",
                    "description": "Type of suspension",
                    "enum": [ "Voluntarily", "Involuntarily" ]
                },
                "comment": {
                    "type": "string",
                    "description": "A free-form user comment, describing the status change reason"
                },
                "serviceFeatures": {
                    "type": "string",
                    "description": "JCW Collection of [Extension Service Feature Info]  Extension service features returned in response only when the logged-in user requests his/her own extension info, see also Extension Service Features"
                },
                "regionalSettings": {
                    "description": "Extension region data (timezone, home country, language)",
                    "$ref": "#/definitions/RegionalSettingsInfo"
                },
                "setupWizardState": {
                    "type": "string",
                    "description": "Specifies extension configuration wizard state (web service setup). The default value is 'NotStarted'",
                    "enum": [ "NotStarted", "Incomplete", "Completed" ]
                },
                "permissions": {
                    "description": "Extension permissions, corresponding to the Service Web permissions \"Admin\" and \"InternationalCalling\"",
                    "$ref": "#/definitions/ExtensionPermissionsInfo"
                }
            }
        },
        "ExtensionPermissionsInfo": {
            "properties": {
                "admin": {
                    "description": "Admin permission",
                    "$ref": "#/definitions/BooleanEnabledInfo"
                },
                "internationalCalling": {
                    "description": "International Calling permission",
                    "$ref": "#/definitions/BooleanEnabledInfo"
                }
            }
        },
        "RegionalSettingsInfo": {
            "properties": {
                "timezone": {
                    "description": "Extension timezone information",
                    "$ref": "#/defnitions/TimezoneInfo"
                },
                "homeCountry": {
                    "description": "Extension country information",
                    "$ref": "#/definitions/CountryInfo"
                },
                "language": {
                    "description": "User interface language data",
                    "$ref": "#/definitions/LanguageInfo"
                },
                "greetingLanguage": {
                    "description": "Information on language used for telephony greetings",
                    "$ref": "#/definitions/LanguageInfo"
                },
                "formattingLocale": {
                    "descripion": "Formatting language preferences for numbers, dates and currencies",
                    "$ref": "#/definitions/LanguageInfo"
                }
            }
        },
        "TimezoneInfo": {
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "Standard resource properties canonical URI"
                },
                "id": {
                    "type": "string",
                    "description": "Standard resource properties ID"
                },
                "name": {
                    "type": "string",
                    "description": "Short name of the timezone"
                },
                "description": {
                    "type": "string",
                    "description": "Meaningful description of the timezone"
                }
            }
        },
        "CountryInfo": {
            "properties": {
                "uri": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "isoCode": {
                    "type": "string"
                },
                "callingCode": {
                    "type": "string"
                }
            }
        },
        "LanguageInfo": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Internal identifier of a language, greeting language, or formatting language"
                },
                "name": {
                    "type": "string",
                    "description": "Official name of a language"
                },
                "localeCode": {
                    "type": "string",
                    "description": "Localization code"
                }
            }
        },
        "BooleanEnabledInfo": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "ExtensionInfoShort": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Standard resource properties ID and canonical URI"
                },
                "uri": {
                    "type": "string",
                    "description": "Standard resource properties ID and canonical URI"
                },
                "partnerId": {
                    "type": "string",
                    "description": "For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding accountId/extensionId for each partnerId of a client application. In request URIs partnerIds are accepted instead of regular RingCentral native IDs as path parameters using <b>pid = XXX</b> clause. Though in response URIs contain the corresponding accountIds and extensionIds. In all request and response bodies these values are reflected via \"partnerId\" attributes of account and extension"
                },
                "extensionNumber": {
                    "type": "string",
                    "description": "Extension number (usually 3 or 4 digits)"
                }
            }
        },
        "ServiceInfo": {
            "description": "Account service information, including brand, service plan and billing plan",
            "properties": {
                "uri": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#/definitions/BrandInfo"
                },
                "servicePlan": {
                    "$ref": "#/definitions/ServicePlanInfo"
                },
                "billingPlan": {
                    "$ref": "#/definitions/BillingPlanInfo"
                }
            }
        },
        "BrandInfo": {
            "id": {
                "type": "string",
                "description": "Internal identifier of a brand"
            },
            "name": {
                "type": "string",
                "description": "Brand name, for example \"RingCentral UK\", \"ClearFax\""
            },
            "homeCountry": {
                "$ref": "#/definitions/HomeCountryInfo"
            }
        },
        "HomeCountryInfo": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Internal identifier of a home country"
                },
                "uri": {
                    "type": "string",
                    "description": "Home country URI"
                }
            }
        },
        "ServicePlanInfo": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Internal identifier of a service plan"
                },
                "name": {
                    "type": "string",
                    "description": "Service plan name"
                }
            }
        },
        "BillingPlanInfo": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Internal identifier of a billing plan"
                },
                "name": {
                    "type": "string",
                    "description": "Billing plan name"
                },
                "durationUnit": {
                    "type": "string",
                    "description": "Duration period",
                    "enum": [ "Month", "Day" ]
                },
                "duration": {
                    "type": "string",
                    "description": "Number of duration units"
                },
                "type": {
                    "type": "string",
                    "description": "Billing plan type",
                    "enum": [ "Initial", "Regular", "Suspended", "Trial", "TrialNoCC", "Free" ]
                }
            }
        },
        "CallLogRecord": {
            "properties": {
                "uri": { "type": "string" },
                "id": { "type": "string" },
                "sessionId": { "type": "string" },
                "startTime": { "type": "string", "format": "date-time" },
                "duration": { "type": "integer", "format": "int64" },
                "type": {
                    "type": "string",
                    "enum": [ "Voice" ]
                },
                "direction": {
                    "type": "string",
                    "enum": [ "Inbound", "Outbound" ]
                },
                "action": {
                    "type": "string",
                    "enum": [ "411 Info", "Accept Call", "Action Name", "Call Return", "Calling Card", "E911 Update", "Emergency", "FindMe", "FollowMe", "Incoming Fax", "Outgoing Fax", "Phone Call", "Phone Login", "Ring Directly", "RingMe", "RingOut Mobile", "RingOut PC", "RingOut Web", "Support", "Transfer", "Unknown", "VoIP Call" ]
                },
                "result": {
                    "type": "string",
                    "enum": [ "Abandoned", "Account Suspended", "Blocked", "Busy", "Call Failed", "Call Failure", "Call accepted", "Call connected", "Declined", "Fax Receipt Error", "Fax Send Error", "Fax on Demand", "Hang up", "IP Phone offline", "Internal Error", "International Disabled", "International Restriction", "Missed", "No Answer", "No fax machine", "Partial Receive", "Partially Sent", "Poor Line Quality", "Receive Error", "Received", "Rejected", "Reply", "Restricted Number", "Result Name", "ResultEmpty", "ResultInProgress", "Send Error", "Sent", "Stopped", "Unknown", "Voicemail", "Wrong Number" ]
                }
            }
        },
        "ApiResponse": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "##default"
            }
        },
        "Category": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Category"
            }
        },
        "Pet": {
            "required": [
                "name",
                "photoUrls"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "name": {
                    "type": "string",
                    "example": "doggie"
                },
                "photoUrls": {
                    "type": "array",
                    "xml": {
                        "name": "photoUrl",
                        "wrapped": true
                    },
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "xml": {
                        "name": "tag",
                        "wrapped": true
                    },
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "pet status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            },
            "xml": {
                "name": "Pet"
            }
        },
        "Tag": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tag"
            }
        },
        "Order": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ]
                },
                "complete": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "Order"
            }
        }
    }
}
